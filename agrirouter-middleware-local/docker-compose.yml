version: "3.7"
services:
  mongo:
    image: mongo:5.0
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=changeit
      - MONGO_INITDB_DATABASE=agriroutermiddleware
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    ports:
      - "27017:27017"
    networks:
      - backend
    restart: unless-stopped

  mysql:
    image: mariadb:10.11
    environment:
      - MYSQL_ROOT_PASSWORD=changeit
      - MYSQL_DATABASE=agriroutermiddleware
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=changeit
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend
    restart: unless-stopped


  agrirouter-middleware:
    image: ghcr.io/agrirouter-middleware/agrirouter-middleware:develop
    platform: linux/amd64
    environment:
      - MONGODB_HOST=mongo
      - MONGODB_PASSWORD=changeit
      - MONGODB_PORT=27017
      - MONGODB_USER=mongouser
      - MONGODB_SCHEMA=agriroutermiddleware
      - MYSQL_HOST=mysql
      - MYSQL_PASSWORD=changeit
      - MYSQL_PORT=3306
      - MYSQL_SCHEMA=agriroutermiddleware
      - MYSQL_USER=mysqluser
      - MESSAGE_CACHE_DATA_DIRECTORY=/tmp/.message-cache # This is a temporary solution, please use a PVC for production
      - SPRING_PROFILES_ACTIVE=prod,connect-agrirouter-prod
      - JAVA_OPTS=-Xms1024m -Xmx3276m -Xss10m
      - AGRIROUTER_STATUS_SKIP_CHECK=true
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - mysql
      - mongo

networks:
  backend:
  frontend:

volumes:
  mongo_data: { }
  mysql_data: { }
